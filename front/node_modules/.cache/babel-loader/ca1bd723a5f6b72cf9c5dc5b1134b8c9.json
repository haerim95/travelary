{"ast":null,"code":"var _jsxFileName = \"/Users/haerim/haerim/workspace/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173 \\u1111\\u1169\\u1110\\u1173\\u1111\\u1169\\u11AF\\u1105\\u1175\\u110B\\u1169/travelary/front/src/components/Register.js\",\n    _s = $RefreshSig$();\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// reactstrap components\nimport Auth from './Auth';\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from 'reactstrap';\nimport axios from 'axios';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [member, setMember] = useState({\n    userName: '',\n    userPwd: '',\n    email: '',\n    birthday: ''\n  });\n  const [pwdRepeat, setPwdRepeat] = useState('');\n  const [emailPass, setEmailPass] = useState(true);\n  const [pwdPass, setPwdPass] = useState(true);\n  const history = useHistory();\n  const userNameRef = React.useRef(null);\n  const userPwdRef = useRef(null);\n  const emailRef = useRef(null);\n  const birthdayRef = useRef(null); // const pwdPass = useRef(true);\n  // 비밀번호 재확인용 변수 업데이트\n\n  const onPwdRepeatChange = e => {\n    setPwdRepeat(e.target.value);\n  };\n\n  const onMemberChange = e => {\n    setMember({ ...member,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    userNameRef.current.focus();\n  }, []); // 비밀번호 유효성 검사\n\n  useEffect(() => {\n    // 비밀번호 유효성 검사 - 8 ~ 15자 영문, 숫자 조합\n    const regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,15}$/;\n    let pwdCheck = document.querySelector('.pwdCheck');\n    let pwdRegExp = regExp.test(member.userPwd);\n    let pwdCheckIcon = document.querySelector('.pwdCheckIcon'); // 아직 아무것도 치지 않았을 때 공백\n\n    if (member.userPwd == undefined || member.userPwd == '') {\n      pwdCheck.innerText = '';\n      pwdCheckIcon.classList.remove('text-success');\n      return;\n    } // 유효성 검사 통과 시 초록색으로 strong 뜨기\n\n\n    if (pwdRegExp) {\n      pwdCheck.classList.add('text-success');\n      pwdCheck.classList.remove('text-muted');\n      pwdCheck.innerText = 'strong';\n      setPwdPass(false); // pwdPass.current = false;\n      // alert(pwdPass.current.value);\n    } else {\n      // 통과 못했을 시 회색으로 week 뜨기\n      pwdCheck.classList.add('text-muted');\n      pwdCheck.classList.remove('text-success');\n      pwdCheck.innerText = 'week';\n    } // 비밀번호 재확인\n\n\n    if (pwdRepeat === member.userPwd) {\n      pwdCheckIcon.classList.add('text-success');\n    } else {\n      pwdCheckIcon.classList.remove('text-success');\n    }\n  }, [pwdRepeat, member.userPwd]); // 이메일 유효성 검사\n\n  const checkEmail = e => {\n    // 인풋박스에 메일을 적고 마우스를 때는 순간 서버로 조회 요청하기\n    var regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i; // 형식에 맞는 경우 true 리턴\n\n    const checkEmail = document.querySelector('.checkEmail');\n    const emailCheckIcon = document.querySelector('.emailCheckIcon');\n\n    if (member.email !== '') {\n      if (regExp.test(e.target.value)) {\n        axios.post('http://localhost:3003/member/checkEmail', {\n          email: member.email\n        }).then(res => {\n          // console.log('데이터 처리결과:', res.data);\n          if (res.data.code === '200') {\n            // 사용 가능한 이메일일 경우\n            checkEmail.classList.add('text-success');\n            checkEmail.classList.remove('text-muted');\n            checkEmail.innerText = 'Email address available';\n            emailCheckIcon.classList.add('text-success');\n            setEmailPass(false);\n          } else {\n            // 이미 사용 중인 이메일일 경우\n            checkEmail.classList.add('text-muted');\n            checkEmail.classList.remove('text-success');\n            checkEmail.innerText = 'Email address already in use';\n            emailCheckIcon.classList.remove('text-success');\n          }\n        }).catch(() => {});\n      } else {\n        checkEmail.classList.add('text-muted');\n        checkEmail.classList.remove('text-success');\n        checkEmail.innerText = 'Incorrect email format';\n        emailCheckIcon.classList.remove('text-success');\n      }\n    } else {\n      checkEmail.innerText = '';\n      emailCheckIcon.classList.remove('text-success');\n    }\n  }; // 로그인 여부 체크 - 로긴 안했으면 로긴페이지로 이동시키기\n  // const isLogin = isMemberLogined();\n  // if (isLogin == false) {else\n  //   history.push('/member/login');\n  // }\n  // 유효성 검사\n\n\n  const registerFormCheck = () => {\n    // useRef 포커스 안됨\n    // alert(userNameRef.current.value);\n    // 빈 칸 작성시 알림창으로 알려주기\n    if (!member.userName) {\n      alert('Please fill out your name!');\n      userNameRef.current.focus();\n      return false;\n    }\n\n    if (!member.email) {\n      alert('Please fill out email address');\n      emailRef.current.focus();\n      return false;\n    }\n\n    if (emailPass) {\n      alert('Use another email');\n      emailRef.current.focus();\n      return false;\n    }\n\n    if (!member.userPwd) {\n      alert('Please fill out your password!');\n      userPwdRef.current.focus();\n      return false;\n    }\n\n    if (pwdPass) {\n      alert('Check password please.');\n      return false;\n    }\n\n    if (!member.birthday) {\n      alert('Please fill out your birthday!');\n      return false;\n    }\n\n    return true;\n  }; // 회원 등록 버튼 실행 함수\n\n\n  const onRegister = e => {\n    e.preventDefault();\n\n    if (registerFormCheck()) {\n      axios.post('http://localhost:3003/member/register', member).then(res => {\n        // console.log('데이터 처리결과:', res.data);\n        alert('Welcome to Travelary! Please Sign In.');\n        history.push('/auth/login');\n      }).catch(() => {});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Auth, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"6\",\n        md: \"8\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"bg-secondary shadow border-0\",\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            className: \"px-lg-5 py-lg-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center text-muted mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"big\", {\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              role: \"form\",\n              onSubmit: onRegister,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"input-group-alternative mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"prepend\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"ni ni-hat-3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    name: \"userName\",\n                    id: \"userName\",\n                    value: member.userName,\n                    onChange: onMemberChange,\n                    ref: userNameRef,\n                    placeholder: \"Name\",\n                    type: \"text\",\n                    autocomplete: \"off\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"input-group-alternative mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"prepend\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"ni ni-email-83\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    name: \"email\",\n                    value: member.email,\n                    onChange: onMemberChange,\n                    onBlur: checkEmail,\n                    ref: emailRef,\n                    placeholder: \"Email\",\n                    type: \"email\",\n                    autoComplete: \"new-email\",\n                    autocomplete: \"off\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"append\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"ni ni-check-bold emailCheckIcon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"checkEmail font-italic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"input-group-alternative\",\n                  children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"prepend\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"ni ni-lock-circle-open\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 321,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    name: \"userPwd\",\n                    value: member.userPwd,\n                    onChange: onMemberChange,\n                    ref: userPwdRef,\n                    placeholder: \"Password\" // placeholder='8 - 15 characters, must contain both letters and numbers'\n                    ,\n                    type: \"password\",\n                    autoComplete: \"new-password\",\n                    autocomplete: \"off\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted text-center\",\n                  children: \"8 - 10 characters, must contain both letters and numbers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-muted font-italic\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"password strength:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"pwdCheck font-weight-700\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"input-group-alternative\",\n                  children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"prepend\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"ni ni-lock-circle-open\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    onChange: onPwdRepeatChange,\n                    value: pwdRepeat,\n                    placeholder: \"Confirm Password\",\n                    type: \"password\",\n                    autoComplete: \"new-password\",\n                    autocomplete: \"off\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"append\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"ni ni-check-bold pwdCheckIcon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"input-group-alternative\",\n                  children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"prepend\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"ni ni-calendar-grid-58\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 375,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    name: \"birthday\",\n                    value: member.birthday,\n                    onChange: onMemberChange,\n                    ref: birthdayRef,\n                    placeholder: \"Birthday\",\n                    type: \"date\",\n                    autoComplete: \"new-password\",\n                    autocomplete: \"off\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Button // onClick={onRegister}\n                , {\n                  className: \"mt-4\",\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Create account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"zW6UyL1IkrDOUVqVDhAIumHOI0c=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/haerim/haerim/workspace/리액트 포트폴리오/travelary/front/src/components/Register.js"],"names":["Auth","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","axios","React","useState","useRef","useEffect","Link","useHistory","Register","member","setMember","userName","userPwd","email","birthday","pwdRepeat","setPwdRepeat","emailPass","setEmailPass","pwdPass","setPwdPass","history","userNameRef","userPwdRef","emailRef","birthdayRef","onPwdRepeatChange","e","target","value","onMemberChange","name","current","focus","regExp","pwdCheck","document","querySelector","pwdRegExp","test","pwdCheckIcon","undefined","innerText","classList","remove","add","checkEmail","emailCheckIcon","post","then","res","data","code","catch","registerFormCheck","alert","onRegister","preventDefault","push"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n// reactstrap components\nimport Auth from './Auth';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from 'reactstrap';\nimport axios from 'axios';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Register = () => {\n  const [member, setMember] = useState({\n    userName: '',\n    userPwd: '',\n    email: '',\n    birthday: '',\n  });\n  const [pwdRepeat, setPwdRepeat] = useState('');\n  const [emailPass, setEmailPass] = useState(true);\n  const [pwdPass, setPwdPass] = useState(true);\n\n  const history = useHistory();\n  const userNameRef = React.useRef(null);\n  const userPwdRef = useRef(null);\n  const emailRef = useRef(null);\n  const birthdayRef = useRef(null);\n  // const pwdPass = useRef(true);\n\n  // 비밀번호 재확인용 변수 업데이트\n  const onPwdRepeatChange = (e) => {\n    setPwdRepeat(e.target.value);\n  };\n\n  const onMemberChange = (e) => {\n    setMember({ ...member, [e.target.name]: e.target.value });\n  };\n\n  useEffect(() => {\n    userNameRef.current.focus();\n  }, []);\n\n  // 비밀번호 유효성 검사\n  useEffect(() => {\n    // 비밀번호 유효성 검사 - 8 ~ 15자 영문, 숫자 조합\n    const regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,15}$/;\n\n    let pwdCheck = document.querySelector('.pwdCheck');\n    let pwdRegExp = regExp.test(member.userPwd);\n    let pwdCheckIcon = document.querySelector('.pwdCheckIcon');\n\n    // 아직 아무것도 치지 않았을 때 공백\n    if (member.userPwd == undefined || member.userPwd == '') {\n      pwdCheck.innerText = '';\n      pwdCheckIcon.classList.remove('text-success');\n      return;\n    }\n    // 유효성 검사 통과 시 초록색으로 strong 뜨기\n    if (pwdRegExp) {\n      pwdCheck.classList.add('text-success');\n      pwdCheck.classList.remove('text-muted');\n      pwdCheck.innerText = 'strong';\n      setPwdPass(false);\n      // pwdPass.current = false;\n      // alert(pwdPass.current.value);\n    } else {\n      // 통과 못했을 시 회색으로 week 뜨기\n      pwdCheck.classList.add('text-muted');\n      pwdCheck.classList.remove('text-success');\n      pwdCheck.innerText = 'week';\n    }\n\n    // 비밀번호 재확인\n    if (pwdRepeat === member.userPwd) {\n      pwdCheckIcon.classList.add('text-success');\n    } else {\n      pwdCheckIcon.classList.remove('text-success');\n    }\n  }, [pwdRepeat, member.userPwd]);\n\n  // 이메일 유효성 검사\n  const checkEmail = (e) => {\n    // 인풋박스에 메일을 적고 마우스를 때는 순간 서버로 조회 요청하기\n    var regExp =\n      /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n    // 형식에 맞는 경우 true 리턴\n    const checkEmail = document.querySelector('.checkEmail');\n    const emailCheckIcon = document.querySelector('.emailCheckIcon');\n    if (member.email !== '') {\n      if (regExp.test(e.target.value)) {\n        axios\n          .post('http://localhost:3003/member/checkEmail', {\n            email: member.email,\n          })\n          .then((res) => {\n            // console.log('데이터 처리결과:', res.data);\n            if (res.data.code === '200') {\n              // 사용 가능한 이메일일 경우\n              checkEmail.classList.add('text-success');\n              checkEmail.classList.remove('text-muted');\n              checkEmail.innerText = 'Email address available';\n              emailCheckIcon.classList.add('text-success');\n              setEmailPass(false);\n            } else {\n              // 이미 사용 중인 이메일일 경우\n              checkEmail.classList.add('text-muted');\n              checkEmail.classList.remove('text-success');\n              checkEmail.innerText = 'Email address already in use';\n              emailCheckIcon.classList.remove('text-success');\n            }\n          })\n          .catch(() => {});\n      } else {\n        checkEmail.classList.add('text-muted');\n        checkEmail.classList.remove('text-success');\n        checkEmail.innerText = 'Incorrect email format';\n        emailCheckIcon.classList.remove('text-success');\n      }\n    } else {\n      checkEmail.innerText = '';\n      emailCheckIcon.classList.remove('text-success');\n    }\n  };\n\n  // 로그인 여부 체크 - 로긴 안했으면 로긴페이지로 이동시키기\n  // const isLogin = isMemberLogined();\n  // if (isLogin == false) {else\n  //   history.push('/member/login');\n  // }\n\n  // 유효성 검사\n  const registerFormCheck = () => {\n    // useRef 포커스 안됨\n    // alert(userNameRef.current.value);\n\n    // 빈 칸 작성시 알림창으로 알려주기\n    if (!member.userName) {\n      alert('Please fill out your name!');\n      userNameRef.current.focus();\n      return false;\n    }\n    if (!member.email) {\n      alert('Please fill out email address');\n      emailRef.current.focus();\n      return false;\n    }\n    if (emailPass) {\n      alert('Use another email');\n      emailRef.current.focus();\n      return false;\n    }\n\n    if (!member.userPwd) {\n      alert('Please fill out your password!');\n      userPwdRef.current.focus();\n      return false;\n    }\n    if (pwdPass) {\n      alert('Check password please.');\n      return false;\n    }\n\n    if (!member.birthday) {\n      alert('Please fill out your birthday!');\n      return false;\n    }\n\n    return true;\n  };\n\n  // 회원 등록 버튼 실행 함수\n  const onRegister = (e) => {\n    e.preventDefault();\n\n    if (registerFormCheck()) {\n      axios\n        .post('http://localhost:3003/member/register', member)\n        .then((res) => {\n          // console.log('데이터 처리결과:', res.data);\n          alert('Welcome to Travelary! Please Sign In.');\n          history.push('/auth/login');\n        })\n        .catch(() => {});\n    }\n  };\n\n  return (\n    <>\n      <Auth>\n        <Col lg='6' md='8'>\n          <Card className='bg-secondary shadow border-0'>\n            {/* <CardHeader className='bg-transparent pb-5'>\n            <div className='text-muted text-center mt-2 mb-4'>\n              <small>Sign up with</small>\n            </div>\n            <div className='text-center'> */}\n            {/* <Link> */}\n            {/* <Button\n                className='btn-neutral btn-icon mr-4'\n                color='default'\n                href='http://localhost:3003/member/kakao'\n                // onClick={(e) => e.preventDefault()}\n                // onClick={onKakaoLogin}\n              >\n                <span className='btn-inner--icon'>\n                  <img\n                    alt='...'\n                    src={\n                      require('../../assets/img/icons/common/github.svg')\n                        .default\n                    }\n                  />\n                </span>\n                <span className='btn-inner--text'>Github</span>\n              </Button> */}\n            {/* </Link> */}\n            {/* <Button\n                className='btn-neutral btn-icon'\n                color='default'\n                href='#pablo'\n                onClick={(e) => e.preventDefault()}\n              >\n                <span className='btn-inner--icon'>\n                  <img\n                    alt='...'\n                    src={\n                      require('../../assets/img/icons/common/google.svg')\n                        .default\n                    }\n                  />\n                </span>\n                <span className='btn-inner--text'>Google</span>\n              </Button>\n            </div>\n          </CardHeader> */}\n            <CardBody className='px-lg-5 py-lg-5'>\n              <div className='text-center text-muted mb-4'>\n                <big>Register</big>\n              </div>\n              <Form role='form' onSubmit={onRegister}>\n                <FormGroup>\n                  <InputGroup className='input-group-alternative mb-3'>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText>\n                        <i className='ni ni-hat-3' />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      name='userName'\n                      id='userName'\n                      value={member.userName}\n                      onChange={onMemberChange}\n                      ref={userNameRef}\n                      placeholder='Name'\n                      type='text'\n                      autocomplete='off'\n                    />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className='input-group-alternative mb-0'>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText>\n                        <i className='ni ni-email-83' />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      name='email'\n                      value={member.email}\n                      onChange={onMemberChange}\n                      onBlur={checkEmail}\n                      ref={emailRef}\n                      placeholder='Email'\n                      type='email'\n                      autoComplete='new-email'\n                      autocomplete='off'\n                    />\n                    <InputGroupAddon addonType='append'>\n                      <InputGroupText>\n                        <i className='ni ni-check-bold emailCheckIcon' />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                  </InputGroup>\n                  {/*//! 이메일 중복 검사 */}\n                  <small>\n                    {/* <span className='text-success font-weight-700'>strong</span> */}\n                    <span className='checkEmail font-italic'></span>\n                  </small>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className='input-group-alternative'>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText>\n                        <i className='ni ni-lock-circle-open' />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      name='userPwd'\n                      value={member.userPwd}\n                      onChange={onMemberChange}\n                      ref={userPwdRef}\n                      placeholder='Password'\n                      // placeholder='8 - 15 characters, must contain both letters and numbers'\n                      type='password'\n                      autoComplete='new-password'\n                      autocomplete='off'\n                    />\n                  </InputGroup>\n                  <small className='text-muted text-center'>\n                    8 - 10 characters, must contain both letters and numbers\n                  </small>\n                  <div className='text-muted font-italic'>\n                    {/* 비밀번호 유효성 검사 */}\n                    <small>\n                      password strength:\n                      {/* <span className='text-success font-weight-700'>strong</span> */}\n                      <span className='pwdCheck font-weight-700'></span>\n                    </small>\n                  </div>\n                </FormGroup>\n                {/* 비밀번호 재확인 */}\n                <FormGroup>\n                  <InputGroup className='input-group-alternative'>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText>\n                        <i className='ni ni-lock-circle-open' />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      onChange={onPwdRepeatChange}\n                      value={pwdRepeat}\n                      placeholder='Confirm Password'\n                      type='password'\n                      autoComplete='new-password'\n                      autocomplete='off'\n                    />\n                    <InputGroupAddon addonType='append'>\n                      <InputGroupText>\n                        <i className='ni ni-check-bold pwdCheckIcon' />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className='input-group-alternative'>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText>\n                        <i className='ni ni-calendar-grid-58' />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    {/* date 타입 브라우저 지원 문제 예외처리하기 */}\n                    <Input\n                      name='birthday'\n                      value={member.birthday}\n                      onChange={onMemberChange}\n                      ref={birthdayRef}\n                      placeholder='Birthday'\n                      type='date'\n                      autoComplete='new-password'\n                      autocomplete='off'\n                    />\n                  </InputGroup>\n                </FormGroup>\n                {/* <Row className='my-4'>\n                <Col xs='12'>\n                  <div className='custom-control custom-control-alternative custom-checkbox'>\n                    <input\n                      className='custom-control-input'\n                      id='customCheckRegister'\n                      type='checkbox'\n                    />\n                    <label\n                      className='custom-control-label'\n                      htmlFor='customCheckRegister'\n                    >\n                      <span className='text-muted'>\n                        I agree with the{' '}\n                        <a href='#pablo' onClick={(e) => e.preventDefault()}>\n                          Privacy Policy\n                        </a>\n                      </span>\n                    </label>\n                  </div>\n                </Col>\n              </Row> */}\n                <div className='text-center'>\n                  <Button\n                    // onClick={onRegister}\n                    className='mt-4'\n                    color='primary'\n                    type='submit'\n                  >\n                    Create account\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Auth>\n    </>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}