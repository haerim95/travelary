{"ast":null,"code":"// 초기 설정\nexport const initialState = {\n  profilePicUpdate: false,\n  token: '',\n  loginMember: {},\n  isLogin: false\n}; // 액션 타입 정의\n// 회원 정보 수정 정보 확인\n\nexport const IS_PROFILE_CHANGED = 'IS_PROFILE_CHANGED'; // 로그인 사용자의 토큰정보를 전역데이터로 관리\n\nexport const MEMBER_LOGIN_TOKEN = 'MEMBER_LOGIN_TOKEN'; // 로그인 한 사용자 정보를 전역 데이터로 관리\n\nexport const MEMBER_LOGIN_UPDATE = 'MEMBER_LOGIN_UPDATE'; // 로그인 상태 체크\n\nexport const MEMBER_LOGIN = 'MEMBER_LOGIN'; // 로그인\n\nexport const MEMBER_LOGOUT = 'MEMBER_LOGOUT'; // 로그아웃\n// 액션 함수\n\nexport const isProfileChanged = data => ({\n  type: IS_PROFILE_CHANGED,\n  profilePicUpdate: data\n});\nexport const memberLoginToken = token => ({\n  type: MEMBER_LOGIN_TOKEN,\n  token: token\n});\nexport const memberLoginUpdate = member => ({\n  type: MEMBER_LOGIN_UPDATE,\n  member\n});\nexport const memberLogin = isLogin => ({\n  type: MEMBER_LOGIN,\n  loginSuccess: isLogin\n});\nexport const memberLogout = isLogout => ({\n  type: MEMBER_LOGOUT,\n  logoutSuccess: isLogout\n}); // 리듀서 함수\n\nfunction member(state = initialState, action) {\n  switch (action.type) {\n    case IS_PROFILE_CHANGED:\n      return { ...state,\n        profilePicUpdate: action.profilePicUpdate\n      };\n\n    case MEMBER_LOGIN_TOKEN:\n      return { ...state,\n        token: action.token\n      };\n\n    case MEMBER_LOGIN_UPDATE:\n      return { ...state,\n        loginMember: action.member\n      };\n\n    case MEMBER_LOGIN:\n      return { ...state,\n        loginSuccess: action.loginSuccess\n      };\n\n    case MEMBER_LOGOUT:\n      return { ...state,\n        logoutSuccess: action.logoutSuccess\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default member;","map":{"version":3,"sources":["/Users/haerim/haerim/workspace/리액트 포트폴리오/travelary/front/src/reducer/member.js"],"names":["initialState","profilePicUpdate","token","loginMember","isLogin","IS_PROFILE_CHANGED","MEMBER_LOGIN_TOKEN","MEMBER_LOGIN_UPDATE","MEMBER_LOGIN","MEMBER_LOGOUT","isProfileChanged","data","type","memberLoginToken","memberLoginUpdate","member","memberLogin","loginSuccess","memberLogout","isLogout","logoutSuccess","state","action"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,gBAAgB,EAAE,KADQ;AAE1BC,EAAAA,KAAK,EAAE,EAFmB;AAG1BC,EAAAA,WAAW,EAAE,EAHa;AAI1BC,EAAAA,OAAO,EAAE;AAJiB,CAArB,C,CAOP;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B,C,CACP;;AACA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B,C,CACP;;AACA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B,C,CACP;;AACA,OAAO,MAAMC,YAAY,GAAG,cAArB,C,CAAqC;;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAtB,C,CAAuC;AAE9C;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,IAAD,KAAW;AACzCC,EAAAA,IAAI,EAAEP,kBADmC;AAEzCJ,EAAAA,gBAAgB,EAAEU;AAFuB,CAAX,CAAzB;AAIP,OAAO,MAAME,gBAAgB,GAAIX,KAAD,KAAY;AAC1CU,EAAAA,IAAI,EAAEN,kBADoC;AAE1CJ,EAAAA,KAAK,EAAEA;AAFmC,CAAZ,CAAzB;AAIP,OAAO,MAAMY,iBAAiB,GAAIC,MAAD,KAAa;AAC5CH,EAAAA,IAAI,EAAEL,mBADsC;AAE5CQ,EAAAA;AAF4C,CAAb,CAA1B;AAIP,OAAO,MAAMC,WAAW,GAAIZ,OAAD,KAAc;AACvCQ,EAAAA,IAAI,EAAEJ,YADiC;AAEvCS,EAAAA,YAAY,EAAEb;AAFyB,CAAd,CAApB;AAIP,OAAO,MAAMc,YAAY,GAAIC,QAAD,KAAe;AACzCP,EAAAA,IAAI,EAAEH,aADmC;AAEzCW,EAAAA,aAAa,EAAED;AAF0B,CAAf,CAArB,C,CAKP;;AACA,SAASJ,MAAT,CAAgBM,KAAK,GAAGrB,YAAxB,EAAsCsB,MAAtC,EAA8C;AAC5C,UAAQA,MAAM,CAACV,IAAf;AACE,SAAKP,kBAAL;AACE,aAAO,EAAE,GAAGgB,KAAL;AAAYpB,QAAAA,gBAAgB,EAAEqB,MAAM,CAACrB;AAArC,OAAP;;AACF,SAAKK,kBAAL;AACE,aAAO,EAAE,GAAGe,KAAL;AAAYnB,QAAAA,KAAK,EAAEoB,MAAM,CAACpB;AAA1B,OAAP;;AACF,SAAKK,mBAAL;AACE,aAAO,EAAE,GAAGc,KAAL;AAAYlB,QAAAA,WAAW,EAAEmB,MAAM,CAACP;AAAhC,OAAP;;AACF,SAAKP,YAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,YAAY,EAAEK,MAAM,CAACL;AAFhB,OAAP;;AAIF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELD,QAAAA,aAAa,EAAEE,MAAM,CAACF;AAFjB,OAAP;;AAIF;AACE,aAAOC,KAAP;AAlBJ;AAoBD;;AAED,eAAeN,MAAf","sourcesContent":["// 초기 설정\nexport const initialState = {\n  profilePicUpdate: false,\n  token: '',\n  loginMember: {},\n  isLogin: false,\n};\n\n// 액션 타입 정의\n// 회원 정보 수정 정보 확인\nexport const IS_PROFILE_CHANGED = 'IS_PROFILE_CHANGED';\n// 로그인 사용자의 토큰정보를 전역데이터로 관리\nexport const MEMBER_LOGIN_TOKEN = 'MEMBER_LOGIN_TOKEN';\n// 로그인 한 사용자 정보를 전역 데이터로 관리\nexport const MEMBER_LOGIN_UPDATE = 'MEMBER_LOGIN_UPDATE';\n// 로그인 상태 체크\nexport const MEMBER_LOGIN = 'MEMBER_LOGIN'; // 로그인\nexport const MEMBER_LOGOUT = 'MEMBER_LOGOUT'; // 로그아웃\n\n// 액션 함수\nexport const isProfileChanged = (data) => ({\n  type: IS_PROFILE_CHANGED,\n  profilePicUpdate: data,\n});\nexport const memberLoginToken = (token) => ({\n  type: MEMBER_LOGIN_TOKEN,\n  token: token,\n});\nexport const memberLoginUpdate = (member) => ({\n  type: MEMBER_LOGIN_UPDATE,\n  member,\n});\nexport const memberLogin = (isLogin) => ({\n  type: MEMBER_LOGIN,\n  loginSuccess: isLogin,\n});\nexport const memberLogout = (isLogout) => ({\n  type: MEMBER_LOGOUT,\n  logoutSuccess: isLogout,\n});\n\n// 리듀서 함수\nfunction member(state = initialState, action) {\n  switch (action.type) {\n    case IS_PROFILE_CHANGED:\n      return { ...state, profilePicUpdate: action.profilePicUpdate };\n    case MEMBER_LOGIN_TOKEN:\n      return { ...state, token: action.token };\n    case MEMBER_LOGIN_UPDATE:\n      return { ...state, loginMember: action.member };\n    case MEMBER_LOGIN:\n      return {\n        ...state,\n        loginSuccess: action.loginSuccess,\n      };\n    case MEMBER_LOGOUT:\n      return {\n        ...state,\n        logoutSuccess: action.logoutSuccess,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default member;\n"]},"metadata":{},"sourceType":"module"}