{"ast":null,"code":"var _jsxFileName = \"/Users/haerim/haerim/workspace/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173 \\u1111\\u1169\\u1110\\u1173\\u1111\\u1169\\u11AF\\u1105\\u1175\\u110B\\u1169/travelary/front/src/components/Category/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLocation, Route, Switch, Redirect } from 'react-router-dom'; // reactstrap components\n\nimport { Container } from 'reactstrap'; // core components\n\nimport AdminNavbar from '../Navbars/AdminNavbar.js';\nimport AdminFooter from '../Footers/AdminFooter.js';\nimport Sidebar from '../Sidebar/Sidebar.js';\nimport PostBg from '../Headers/PostBg'; // import routes from 'routes.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = ({\n  children,\n  props\n}) => {\n  _s();\n\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n  React.useEffect(() => {\n    document.body.classList.add('bg-default');\n    return () => {\n      document.body.classList.remove('bg-default');\n    };\n  }, []); // const getRoutes = (routes) => {\n  //   return routes.map((prop, key) => {\n  //     if (prop.layout === '/admin') {\n  //       return (\n  //         <Route\n  //           path={prop.layout + prop.path}\n  //           component={prop.component}\n  //           key={key}\n  //         />\n  //       );\n  //     } else {\n  //       return null;\n  //     }\n  //   });\n  // };\n  // const getBrandText = (path) => {\n  //   for (let i = 0; i < routes.length; i++) {\n  //     if (\n  //       props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n  //       -1\n  //     ) {\n  //       return routes[i].name;\n  //     }\n  //   }\n  //   return 'Brand';\n  // };\n  // const getBreadcrumb = () => {\n  //   for (let i = 0; i < routes.length; i++) {\n  //     if (\n  //       props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n  //       -1\n  //     ) {\n  //       return routes[i].breadcrumb;\n  //     }\n  //   }\n  // };\n  // /post/view/ url 일때만 보이는 백그라운드임.\n\n  const PostViewHeader = () => {\n    if (window.location.pathname === '/admin/post/view') return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-7\",\n      children: /*#__PURE__*/_jsxDEV(PostBg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, { ...props,\n      // routes={routes}\n      logo: {\n        innerLink: '/admin/index',\n        imgAlt: '...'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      ref: mainContent,\n      children: [/*#__PURE__*/_jsxDEV(AdminNavbar, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), PostViewHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 'auto',\n          maxWidth: '1200px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(AdminFooter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"sIuwJThvOO/F9jr/DegP1xI72aI=\", false, function () {\n  return [useLocation];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/haerim/haerim/workspace/리액트 포트폴리오/travelary/front/src/components/Category/Main.js"],"names":["React","useLocation","Route","Switch","Redirect","Container","AdminNavbar","AdminFooter","Sidebar","PostBg","Main","children","props","mainContent","useRef","location","useEffect","document","documentElement","scrollTop","scrollingElement","current","body","classList","add","remove","PostViewHeader","window","pathname","innerLink","imgAlt","margin","maxWidth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,kBAArD,C,CACA;;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAAA;;AACpC,QAAMC,WAAW,GAAGb,KAAK,CAACc,MAAN,CAAa,IAAb,CAApB;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEAD,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqC,CAArC;AACAF,IAAAA,QAAQ,CAACG,gBAAT,CAA0BD,SAA1B,GAAsC,CAAtC;AACAN,IAAAA,WAAW,CAACQ,OAAZ,CAAoBF,SAApB,GAAgC,CAAhC;AACD,GAJD,EAIG,CAACJ,QAAD,CAJH;AAMAf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ,CAACK,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,YAA5B;AACA,WAAO,MAAM;AACXP,MAAAA,QAAQ,CAACK,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,YAA/B;AACD,KAFD;AAGD,GALD,EAKG,EALH,EAVoC,CAiBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIC,MAAM,CAACZ,QAAP,CAAgBa,QAAhB,KAA6B,kBAAjC,EACE,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKF,WAAO,IAAP;AACD,GARD;;AAUA,sBACE;AAAA,4BACE,QAAC,OAAD,OACMhB,KADN;AAEE;AACA,MAAA,IAAI,EAAE;AACJiB,QAAAA,SAAS,EAAE,cADP;AAEJC,QAAAA,MAAM,EAAE;AAFJ;AAHR;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEjB,WAAnC;AAAA,8BACE,QAAC,WAAD,OACMD;AADN;AAAA;AAAA;AAAA;AAAA,cADF,EAQGc,cAAc,EARjB,eAUE;AAAK,QAAA,KAAK,EAAE;AAAEK,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAZ;AAAA,+BACE,QAAC,MAAD;AAAA,oBAEGrB;AAFH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAiBE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAiCD,CApGD;;GAAMD,I;UAEaT,W;;;KAFbS,I;AAsGN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useLocation, Route, Switch, Redirect } from 'react-router-dom';\n// reactstrap components\nimport { Container } from 'reactstrap';\n// core components\nimport AdminNavbar from '../Navbars/AdminNavbar.js';\nimport AdminFooter from '../Footers/AdminFooter.js';\nimport Sidebar from '../Sidebar/Sidebar.js';\nimport PostBg from '../Headers/PostBg';\n\n// import routes from 'routes.js';\n\nconst Main = ({ children, props }) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  React.useEffect(() => {\n    document.body.classList.add('bg-default');\n    return () => {\n      document.body.classList.remove('bg-default');\n    };\n  }, []);\n\n  // const getRoutes = (routes) => {\n  //   return routes.map((prop, key) => {\n  //     if (prop.layout === '/admin') {\n  //       return (\n  //         <Route\n  //           path={prop.layout + prop.path}\n  //           component={prop.component}\n  //           key={key}\n  //         />\n  //       );\n  //     } else {\n  //       return null;\n  //     }\n  //   });\n  // };\n\n  // const getBrandText = (path) => {\n  //   for (let i = 0; i < routes.length; i++) {\n  //     if (\n  //       props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n  //       -1\n  //     ) {\n  //       return routes[i].name;\n  //     }\n  //   }\n  //   return 'Brand';\n  // };\n\n  // const getBreadcrumb = () => {\n  //   for (let i = 0; i < routes.length; i++) {\n  //     if (\n  //       props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n  //       -1\n  //     ) {\n  //       return routes[i].breadcrumb;\n  //     }\n  //   }\n  // };\n\n  // /post/view/ url 일때만 보이는 백그라운드임.\n  const PostViewHeader = () => {\n    if (window.location.pathname === '/admin/post/view')\n      return (\n        <div className='pt-7'>\n          <PostBg />\n        </div>\n      );\n    return null;\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        // routes={routes}\n        logo={{\n          innerLink: '/admin/index',\n          imgAlt: '...',\n        }}\n      />\n      <div className='main-content' ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          // brandText={getBrandText(props.location.pathname)}\n          // breadcrumb={getBreadcrumb(props.location.pathname)}\n        />\n\n        {/* post view 페이지에만 나오는 헤더영역 */}\n        {PostViewHeader()}\n\n        <div style={{ margin: 'auto', maxWidth: '1200px' }}>\n          <Switch>\n            {/* {getRoutes(routes)} */}\n            {children}\n            {/* <Redirect from='*' to='/admin/index' /> */}\n          </Switch>\n        </div>\n        <Container fluid>\n          <AdminFooter />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}